* Summary

How do you create an object-oriented programming language with just
dictionaries and a simple linking mechanism.

* Exercises

** Looping

** Inheritance

** Memoizing

** Generators

* Setup

#+begin_src sh
brew install lua cmake rtmidi
luarocks install luarepl

#+end_src

#+begin_src lua

#+end_src
* Considerations

- typical action like iterating through a sequence seemed like more initialization work than would generally be expected

- not being able to return from an if seemed odd

- the reduce example seemed useful

- the use of pairs and tables seems worthwhile to illustrate

- tables are dicts (Python) or hashes (Ruby)

- pairs(table) is an iterator wrapping a for loop

* Getting Started

#+begin_src sh
lua -e 'print(math.sin(1))'
#+end_src

#+RESULTS:
: 0.8414709848079

* Documentation

- http://www.lua.org/manual/5.1/manual.html#pdf-for
