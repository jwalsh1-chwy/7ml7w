* miniKanren

- https://github.com/swannodette/logic-tutorial
- https://github.com/webyrd/Barliman
- https://github.com/clojure/core.logic/tree/master/src/main/clojure/clojure/core/logic

** Day 1: Unified Theories of Code

** Day 2: Mixing the Logical and Functional

** Day 3: Writing Stories with Logic

* core.logic

- https://clojuredocs.org/clojure.core.logic
- https://github.com/clojure/core.logic/blob/master/src/main/clojure/clojure/core/logic.clj
- http://mullr.github.io/micrologic/literate.html

** Suffixes

| o | relation        |
| a | soft goal       |
| g | psuedo relation |
| u | committed       |
| e |                 |
| c | constraint      |

** logic.clj

- Utilities
- Pair
- Constraint Store
- SubstValue
- Substitutions

* Logic Programming

** Facts

*** Microshaft Personnel (SICP, 4.4.1)

| address    | bitdiddle ben   | slumerville, ridge road |
| job        | bitdiddle ben   | compute wizard          |
| salary     | bitdiddle ben   | 60000                   |
| address    | hacker alyssa p | cambridge, mass ave     |
| job        | hacker alyssa p | computer programmer     |
| salary     | hacker alyssa p |                         |
| supervisor | hacker alyssa p | bitdiddle ben           |
| address    | fect cy d       |                         |
| job        | fect cy d       | computer programmer     |
| salary     | fect cy d       |                         |
| supervisor | fect cy d       | bitdiddle ben           |
| address    | tweakit lem e   |                         |
| job        | tweakit lem e   | computer technician     |
| salary     | tweakit lem e   |                         |
| supervisor | tweakit lem e   | bitdiddle ben           |

*** Microshaft Jobs


*** Greek Gods

| parent | uranus     | cronus     |
| parent | gaea       | cronus     |
| parent | gaea       | rhea       |
| parent | rhea       | zeus       |
| parent | cronus     | zeus       |
| parent | rhea       | hera       |
| parent | cronus     | hera       |
| parent | cronus     | hades      |
| parent | rhea       | hades      |
| parent | cronus     | hestia     |
| parent | rhea       | hestia     |
| parent | zeus       | hermes     |
| parent | maia       | hermes     |
| parent | zeus       | athena     |
| parent | zeus       | ares       |
| parent | hera       | ares       |
| parent | zeus       | hephaestus |
| parent | hera       | hephaestus |
| parent | zeus       | apollo     |
| parent | leto       | apollo     |
| parent | zeus       | artemis    |
| parent | leto       | artemis    |
| parent | semele     | dionysius  |
| parent | aphrodite  | harmonia   |
| parent | ares       | harmonia   |
| parent | harmonia   | semele     |
| parent | demeter    | persephone |
| female | gaea       |            |
| female | rhea       |            |
| female | hera       |            |
| female | hestia     |            |
| female | demeter    |            |
| female | athena     |            |
| female | metis      |            |
| female | maia       |            |
| female | persephone |            |
| female | aphrodite  |            |
| female | artemis    |            |
| female | leto       |            |
| male   | uranus     |            |
| male   | cronus     |            |
| male   | zeus       |            |
| male   | hades      |            |
| male   | hermes     |            |
| male   | apollo     |            |
| male   | dionysius  |            |
| male   | hephaestus |            |
| male   | poseidon   |            |

*** Intervals

*** Lists

* The Reasoned Schemer

- Run Geiser with Chez Scheme on the following:


#+begin_src sh
brew install chezscheme
cd ~/sandbox
git clone git@github.com:TheReasonedSchemer2ndEd/CodeFromTheReasonedSchemer2ndEd.git
cd CodeFromTheReasonedSchemer2ndEd
echo '(load "trs2-impl.scm")' > repl.scm
echo "(run* q (== 'pasta q))" >> repl.scm
echo '(load "trs2-arith.scm")' >> repl.scm
echo '(run* q (*o (build-num 3) (build-num 4) q))' >> repl.scm
#+end_src

#+RESULTS:

** Code (10. Under the Hood)

   https://github.com/TheReasonedSchemer2ndEd/CodeFromTheReasonedSchemer2ndEd/blob/master/trs2-impl.scm

*** ==

*** fresh

*** conde

*** run

*** run*

*** defrel


* Getting Started

#+begin_src sh
brew cask install emacs intellij-idea pycharm visual-studio-code
#+end_src

** Emacs: Cider

#+begin_src elisp
(package-install cider)
#+end_src

[[emacs.png]]

** IntelliJ: Cursive

Install Cursive.

[[intellij.png]]

** LightTable

[[lighttable.png]]

** PyCharm: Clojure-Kit

[[pycharm.png]]

** Visual Studio Code: Calva

[[vscode.png]]

* Book Club

** Day 1

Adding links here for reference:

- https://calva.io/ : Clojure support in VSCode

- http://danmidwood.com/content/2014/11/21/animated-paredit.html and https://calva.io/paredit/ : editor support for dealing with parenthesis

- http://minikanren.org/#implementations : alternatives to core.logic

- http://tca.github.io/veneer/editor.html : miniKanren in JavaScript

- https://github.com/jtauber/pykanren/blob/master/kanren.py : ...in Python

- https://www.youtube.com/watch?v=7kPMFkNm2dw : live coding core.logic

- https://www.youtube.com/watch?v=rI8tNMsozo0 : easy vs. simplicity when thinking of code as trees

- https://github.com/webyrd/Barliman : logic programming to support program synthesis (append) using example rather than implementation

- https://youtu.be/MnrRUdbOW1M?t=694 : on introducing syntax, editors, and programming concepts as a pedagogical anti-pattern

- https://icfp20.sigplan.org/home/minikanren-2020 : recent talk on miniKanren

- https://github.com/webyrd/mediKanren : implementation of logic programming for health

- https://www.uab.edu/news/research/item/10382-a-high-speed-dr-house-for-medical-breakthroughs : logic programming and diagnosis

- https://www.amazon.com/Reasoned-Schemer-second-Daniel-Friedman-ebook/dp/B08BT1MJZV

- https://www.youtube.com/watch?v=aAlR3cezPJg&t=999s
